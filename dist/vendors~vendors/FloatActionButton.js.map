{"version":3,"sources":["webpack:///./node_modules/responsiveVoice/responsivevoice.js"],"names":[],"mappings":"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CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe,2BAA2B;;AAE1C;;AAEA,gBAAgB,sBAAsB;;AAEtC;;AAEA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA","file":"vendors~vendors/FloatActionButton.js","sourcesContent":["// modified by chris demartini to wrap for npm\r\n// obtained from https://www.dataplusscience.com/Tabitha.html by Jeffrey Shaffer\r\n\r\nvar responsiveVoice = {};\r\n\r\n(function() {\r\n\r\n\tvar self = this;\r\n\r\n\r\n\t// Our own collection of voices\r\n\tvar responsivevoices = [\r\n\t\t{name: 'UK English Female', \t\tvoiceIDs: [3,5,1,6,7,8] },\r\n\t\t{name: 'UK English Male', \t\t\tvoiceIDs: [0,4,2,6,7,8] },\r\n\t\t{name: 'US English Female',\t\t\tvoiceIDs: [39,40,41,42,43,44] },\r\n\t\t{name: 'Spanish Female',\t\t\tvoiceIDs: [19,16,17,18,20,15] },\r\n\t\t{name: 'French Female',\t\t\t\tvoiceIDs: [21,22,23,26] },\r\n\t\t{name: 'Deutsch Female',\t\t\tvoiceIDs: [27,28,29,30,31,32] },\r\n\t\t{name: 'Italian Female',\t\t\tvoiceIDs: [33,34,35,36,37,38] },\r\n\t\t{name: 'Hungarian Female',\t\t\tvoiceIDs: [9,10,11] },\r\n\t\t{name: 'Serbian Male',\t\t\t\tvoiceIDs: [12] },\r\n\t\t{name: 'Croatian Male',\t\t\t\tvoiceIDs: [13] },\r\n\t\t{name: 'Bosnian Male',\t\t\t\tvoiceIDs: [14] },\r\n\t\t{name: 'Fallback UK Female',\t \tvoiceIDs: [8] }\r\n\r\n\t];\r\n\r\n\t//All voices available on every system and device\r\n\tvar voicecollection = [\r\n\t\t{name: 'Google UK English Male'},\t\t\t\t\t\t\t\t\t\t//0 male uk android/chrome\r\n\t\t{name: 'Agnes'},\t\t\t\t\t\t\t\t\t\t\t\t\t\t//1 female us safari mac\r\n\t\t{name: 'Daniel Compact'},\t\t\t\t\t\t\t\t\t\t\t\t//2 male us safari mac\r\n\t\t{name: 'Google UK English Female'},\t\t\t\t\t\t\t\t\t\t//3 female uk android/chrome\r\n\t\t{name: 'en-GB', rate: 0.5, pitch: 1}, \t\t\t\t\t\t\t\t\t//4 male uk IOS\r\n\t\t{name: 'en-AU', rate: 0.5, pitch: 1},\t\t\t\t\t\t\t\t\t//5 female english IOS\r\n\t\t{name: 'inglés Reino Unido'},\t\t\t\t\t\t\t\t\t\t\t//6 spanish english android\r\n\t\t{name: 'English United Kingdom'},\t\t\t\t\t\t\t\t\t\t//7 english english android\r\n\t\t{name: 'Fallback en-GB Female', lang: 'en-GB', \tfallbackvoice: true},\t//8 fallback english female\r\n\t\t{name: 'Eszter Compact'},\t\t\t\t\t\t\t\t\t\t\t\t//9 Hungarian mac\r\n\t\t{name: 'hu-HU', rate: 0.4},\t\t\t\t\t\t\t\t\t\t\t\t\t\t//10 Hungarian iOS\r\n\t\t{name: 'Fallback Hungarian', \tlang: 'hu', \tfallbackvoice:true},\t//11 Hungarian fallback\r\n\t\t{name: 'Fallback Serbian', \t\tlang: 'sr', \tfallbackvoice:true},\t//12 Serbian fallback\r\n\t\t{name: 'Fallback Croatian',\t\tlang: 'hr', \tfallbackvoice:true},\t//13 Croatian fallback\r\n\t\t{name: 'Fallback Bosnian',\t\tlang: 'bs', \tfallbackvoice:true},\t//14 Bosnian fallback\r\n\r\n\t\t{name: 'Fallback Spanish',\t\tlang: 'es', \tfallbackvoice:true},\t//15 Spanish fallback\r\n\t\t{name: 'Spanish Spain'},\t\t\t\t\t\t\t\t\t\t\t\t//16 female es android/chrome\r\n\t\t{name: 'español España'},\t\t\t\t\t\t\t\t\t\t\t\t//17 female es android/chrome\r\n\t\t{name: 'Diego Compact', rate: 0.3},\t\t\t\t\t\t\t\t\t\t//18 male es mac\r\n\t\t{name: 'Google Español'},\t\t\t\t\t\t\t\t\t\t\t\t//19 male es chrome\r\n\t\t{name: 'es-ES', rate: 0.3},\t\t\t\t\t\t\t\t\t\t\t\t//20 male es iOS\r\n\r\n\t\t{name: 'Google Français'},\t\t\t\t\t\t\t\t\t\t\t\t//21 FR chrome\r\n\t\t{name: 'French France'},\t\t\t\t\t\t\t\t\t\t\t\t//22 android/chrome\r\n\t\t{name: 'francés Francia'},\t\t\t\t\t\t\t\t\t\t\t\t//23 android/chrome\r\n\t\t{name: 'Virginie Compact', rate: 0.5},\t\t\t\t\t\t\t\t\t//24 mac\r\n\t\t{name: 'fr-FR', rate: 0.5},\t\t\t\t\t\t\t\t\t\t\t\t//25 iOS\r\n\t\t{name: 'Fallback French',\t\tlang: 'fr', \tfallbackvoice:true},\t//26 fallback\r\n\r\n\t\t{name: 'Google Deutsch'},\t\t\t\t\t\t\t\t\t\t\t\t//27 DE chrome\r\n\t\t{name: 'German Germany'},\t\t\t\t\t\t\t\t\t\t\t\t//28 android/chrome\r\n\t\t{name: 'alemán Alemania'},\t\t\t\t\t\t\t\t\t\t\t\t//29 android/chrome\r\n\t\t{name: 'Yannick Compact', rate: 0.5},\t\t\t\t\t\t\t\t\t//30 mac\r\n\t\t{name: 'de-DE', rate: 0.5},\t\t\t\t\t\t\t\t\t\t\t\t//31 iOS\r\n\t\t{name: 'Fallback Deutsch',\t\tlang: 'de', \tfallbackvoice:true},\t//32 fallback\r\n\r\n\t\t{name: 'Google Italiano'},\t\t\t\t\t\t\t\t\t\t\t\t//33 DE chrome\r\n\t\t{name: 'Italian Italy'},\t\t\t\t\t\t\t\t\t\t\t\t//34 android/chrome\r\n\t\t{name: 'italiano Italia'},\t\t\t\t\t\t\t\t\t\t\t\t//35 android/chrome\r\n\t\t{name: 'Paolo Compact', rate: 0.5},\t\t\t\t\t\t\t\t\t\t//36 mac\r\n\t\t{name: 'it-IT', rate: 0.5},\t\t\t\t\t\t\t\t\t\t\t\t//37 iOS\r\n\t\t{name: 'Fallback Italian',\t\tlang: 'it', \tfallbackvoice:true},\t//38 fallback\r\n\r\n\t\t{name: 'Google US English'},\t\t\t\t\t\t\t\t\t\t\t//39 DE chrome\r\n\t\t{name: 'English United States'},\t\t\t\t\t\t\t\t\t\t//40 android/chrome\r\n\t\t{name: 'inglés Estados Unidos'},\t\t\t\t\t\t\t\t\t\t//41 android/chrome\r\n\t\t{name: 'Vicki'},\t\t\t\t\t\t\t\t\t\t\t\t\t\t//42 mac\r\n\t\t{name: 'en-US', rate: 0.5},\t\t\t\t\t\t\t\t\t\t\t\t//43 iOS\r\n\t\t{name: 'Fallback English',\t\tlang: 'en-US', \tfallbackvoice:true},\t//44 fallback\r\n\r\n\t];\r\n\r\n\tvar systemvoices;\r\n\r\n\tvar CHARACTER_LIMIT = 100;\r\n\tvar VOICESUPPORT_ATTEMPTLIMIT = 5;\r\n\tvar voicesupport_attempts = 0;\r\n\tvar fallbackMode = false;\r\n\r\n\tthis.fallback_playing = false;\r\n\tthis.fallback_parts = null;\r\n\tthis.fallback_part_index = 0;\r\n\tthis.fallback_audio = null;\r\n\tself.msgparameters = null;\r\n\tself.timeoutId = null;\r\n\tself.WORDS_PER_MINUTE = 130;\r\n\tself.debug = false;\r\n\r\n\t//Wait until system voices are ready and trigger the event OnVoiceReady\r\n\tif (typeof speechSynthesis != 'undefined') {\r\n\t\tspeechSynthesis.onvoiceschanged = function() {\r\n\r\n\t\t\tsystemvoices = window.speechSynthesis.getVoices();\r\n\r\n\t\t\tif (self.OnVoiceReady!=null) {\r\n\t\t\t\tself.OnVoiceReady.call();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tthis.default_rv = responsivevoices[0];\r\n\r\n\r\n\r\n\tthis.OnVoiceReady = null;\r\n\r\n\r\n\t//We should use jQuery if it's available\r\n\tif (typeof $ === 'undefined') {\r\n\t\tdocument.addEventListener('DOMContentLoaded',function(){\r\n\t\t\tinit();\r\n\t\t});\r\n\t}else{\r\n\r\n\t\t$(document).ready(function() {\r\n\t\t\tinit();\r\n\t\t});\r\n\t}\r\n\r\n\tself.log = function (log) {\r\n\t\tif (self.debug) {\r\n\t\t\t\tconsole.log(log);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tfunction init() {\r\n\r\n\r\n\t\tif (typeof speechSynthesis === 'undefined') {\r\n\r\n\t\t\tenableFallbackMode();\r\n\r\n\t\t} else {\r\n\r\n\r\n\t\t\t//Waiting a few ms before calling getVoices() fixes some issues with safari on IOS as well as Chrome\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tvar gsvinterval = setInterval(function() {\r\n\r\n\t\t\t\t\tvar v = window.speechSynthesis.getVoices();\r\n\r\n\t\t\t\t\tif (v.length==0 && (systemvoices==null || systemvoices.length==0)) {\r\n\t\t\t\t\t\tconsole.log('Voice support NOT ready');\r\n\r\n\t\t\t\t\t\tvoicesupport_attempts++;\r\n\t\t\t\t\t\tif (voicesupport_attempts > VOICESUPPORT_ATTEMPTLIMIT) {\r\n\t\t\t\t\t\t\t//We don't support voices. Using fallback\r\n\r\n\t\t\t\t\t\t\tclearInterval(gsvinterval);\r\n\r\n\t\t\t\t\t\t\tenableFallbackMode();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}else{\r\n\r\n\t\t\t\t\t\tconsole.log('Voice support ready');\r\n\r\n\t\t\t\t\t\tclearInterval(gsvinterval);\r\n\r\n\t\t\t\t\t\tsystemvoices = v;\r\n\r\n\t\t\t\t\t\tmapRVs();\r\n\r\n\t\t\t\t\t\tif (self.OnVoiceReady!=null)\r\n\t\t\t\t\t\t\tself.OnVoiceReady.call();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},100);\r\n\t\t\t},100);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction enableFallbackMode() {\r\n\r\n\t\tfallbackMode = true;\r\n\t\tconsole.log('Voice not supported. Using fallback mode');\r\n\r\n\t\tmapRVs();\r\n\r\n\t\tif (self.OnVoiceReady!=null)\r\n\t\t\tself.OnVoiceReady.call();\r\n\r\n\r\n\t}\r\n\r\n\r\n\tthis.getVoices = function() {\r\n\r\n\t\t//Create voices array\r\n\r\n\t\tvar v = [];\r\n\r\n\t\tfor (var i=0; i<responsivevoices.length; i++) {\r\n\t\t\tv.push( { name: responsivevoices[i].name });\r\n\t\t}\r\n\r\n\t\treturn v;\r\n\r\n\t}\r\n\r\n\r\n\tthis.speak = function(text, voicename, parameters) {\r\n\r\n\t\t//console.log(text, voicename, parameters);\r\n\t\t//Support for multipart text (there is a limit on characters)\r\n\t\ttext = text.replace(/[\\\"\\`]/gm,\"'\");\r\n\r\n\t\tself.msgparameters = parameters ||  {};\r\n\t\tself.msgtext = text;\r\n\t\tself.msgvoicename = voicename;\r\n\r\n\t\tself.onstartFired = false;\r\n\r\n\t\tvar multipartText = [];\r\n\r\n\t\tif (text.length>CHARACTER_LIMIT) {\r\n\r\n\t\t\tvar tmptxt = text;\r\n\r\n\t\t\twhile(tmptxt.length>CHARACTER_LIMIT) {\r\n\r\n\t\t\t\t//Split by common phrase delimiters\r\n\t\t\t\tvar p = tmptxt.search(/[:!?.;]+/);\r\n\t\t\t\tvar part = '';\r\n\r\n\t\t\t\t//Coludn't split by priority characters, try commas\r\n\t\t\t\tif (p==-1 || p>=CHARACTER_LIMIT ) {\r\n\t\t\t\t\tp = tmptxt.search(/[,]+/);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Couldn't split by normal characters, then we use spaces\r\n\t\t\t\tif (p==-1 || p>=CHARACTER_LIMIT) {\r\n\r\n\t\t\t\t\tvar words = tmptxt.split(' ');\r\n\r\n\t\t\t\t\tfor (var i=0; i<words.length; i++) {\r\n\r\n\t\t\t\t\t\tif (part.length + words[i].length +1 >CHARACTER_LIMIT)\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tpart += (i!=0?' ':'') + words[i];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpart = tmptxt.substr(0, p+1);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmptxt = tmptxt.substr(part.length, tmptxt.length-part.length);\r\n\r\n\t\t\t\tmultipartText.push(part);\r\n\t\t\t\t//console.log(part.length + \" - \" + part);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Add the remaining text\r\n\t\t\tif (tmptxt.length>0) {\r\n\t\t\t\tmultipartText.push(tmptxt);\r\n\t\t\t}\r\n\r\n\t\t}else{\r\n\r\n\t\t\t//Small text\r\n\t\t\tmultipartText.push(text);\r\n\t\t}\r\n\r\n\r\n\t\t//Find system voice that matches voice name\r\n\t\tvar rv;\r\n\r\n\t\tif (voicename==null) {\r\n\t\t\trv = self.default_rv;\r\n\t\t}else{\r\n\t\t\trv = getResponsiveVoice(voicename);\r\n\t\t}\r\n\r\n\t\tvar profile = {};\r\n\r\n\t\t//Map was done so no need to look for the mapped voice\r\n\t\tif (rv.mappedProfile!=null) {\r\n\r\n\t\t\tprofile = rv.mappedProfile;\r\n\r\n\t\t}else{\r\n\r\n\t\t\tprofile.systemvoice = getMatchedVoice(rv);\r\n\t\t\tprofile.collectionvoice = {};\r\n\r\n\t\t\tif (profile.systemvoice==null) {\r\n\t\t\t\tconsole.log('ERROR: No voice found for: ' + voicename);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tself.msgprofile = profile;\r\n\r\n\r\n\t\tif (profile.collectionvoice.fallbackvoice==true) {\r\n\t\t\tfallbackMode = true;\r\n\t\t\tself.fallback_parts = [];\r\n\t\t}else{\r\n\t\t\tfallbackMode = false;\r\n\t\t}\r\n\r\n\r\n\t\t//Play multipart text\r\n\t\tfor (var i=0; i<multipartText.length; i++) {\r\n\r\n\t\t\tif (!fallbackMode) {\r\n\t\t\t\t//Use SpeechSynthesis\r\n\r\n\t\t\t\t//Create msg object\r\n\t\t\t\tvar msg = new SpeechSynthesisUtterance();\r\n\t\t\t\tmsg.voice = profile.systemvoice;\r\n\t\t\t\tmsg.voiceURI = profile.systemvoice.voiceURI;\r\n\t\t\t\tmsg.volume = profile.collectionvoice.volume || profile.systemvoice.volume || 1; // 0 to 1\r\n\t\t\t\tmsg.rate = profile.collectionvoice.rate || profile.systemvoice.rate || 1; // 0.1 to 10\r\n\t\t\t\tmsg.pitch = profile.collectionvoice.pitch || profile.systemvoice.pitch || 1; //0 to 2*/\r\n\t\t\t\tmsg.text = multipartText[i];\r\n\t\t\t\tmsg.lang = profile.collectionvoice.lang || profile.systemvoice.lang;\r\n\t\t\t\t//console.log(msg);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmsg.onstart = self.speech_onstart;\r\n\t\t\t\t}\r\n\t\t\t\tself.msgparameters.onendcalled = false;\r\n\r\n\t\t\t\tif (parameters != null) {\r\n\r\n\t\t\t\t\tif (i < multipartText.length - 1 && multipartText.length > 1) {\r\n\t\t\t\t\t\t// don't need this\r\n\t\t\t\t\t\t// msg.onend = self.onPartEnd;\r\n\t\t\t\t\t\t// if (msg.hasOwnProperty(\"addEventListener\"))\r\n\t\t\t\t\t\t// \tmsg.addEventListener('end',self.onPartEnd);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmsg.onend = self.speech_onend;\r\n\t\t\t\t\t\tif (msg.hasOwnProperty(\"addEventListener\"))\r\n\t\t\t\t\t\t\tmsg.addEventListener('end',self.speech_onend);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmsg.onerror = parameters.onerror || function (e) {\r\n\t\t\t\t\t\t\tself.log('RV: Unknow Error');\r\n\t\t\t\t\t\t\tself.log(e);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.log('No Params received for current Utterance');\r\n\r\n\t\t\t\t\tmsg.onend = self.speech_onend;\r\n\t\t\t\t\tmsg.onerror = function (e) {\r\n\t\t\t\t\t\tself.log('RV: Unknow Error');\r\n\t\t\t\t\t\tself.log(e);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself.cancelled = false;\r\n\t\t\t\tspeechSynthesis.speak(msg);\r\n\r\n\t\t\t}else{\r\n\r\n\t\t\t\tvar url = 'http://www.corsproxy.com/translate.google.com/translate_tts?ie=UTF-8&q=' + multipartText[i] + '&tl=' + profile.collectionvoice.lang || profile.systemvoice.lang || 'en-US';\r\n\r\n\t\t\t\tvar audio = new Audio(url);\r\n\t\t\t\taudio.playbackRate = 1;\r\n\t\t\t\taudio.preload = 'auto';\r\n\t\t\t\taudio.volume = profile.collectionvoice.volume || profile.systemvoice.volume || 1; // 0 to 1;\r\n\t\t\t\tself.fallback_parts.push(audio);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (fallbackMode)\r\n\t\t\tself.fallback_startPlaying();\r\n\r\n\t}\r\n\r\n\tthis.fallback_startPlaying = function() {\r\n\r\n\t\t//console.log('start playing');\r\n\r\n\t\tself.fallback_part_index = 0;\r\n\r\n\t\t//console.log(self.fallback_parts);\r\n\r\n\t\tself.fallback_finishedplaying();\r\n\r\n\r\n\r\n\t}\r\n\r\n\tthis.fallback_finishedplaying = function(e) {\r\n\t\t//console.log('chunk ended');\r\n\t\tself.fallback_audio = self.fallback_parts[self.fallback_part_index];\r\n\t\t//console.log(self.fallback_audio);\r\n\r\n\r\n\r\n\t\t//self.fallback_audio.addEventListener('error', function(e){ console.log('error'); console.log(e)});\r\n\t\t//self.fallback_audio.addEventListener('progress', function(e){ console.log('progress'); this.play();});\r\n\t\t//self.fallback_audio.addEventListener('loadstart', function(e){ console.log('loadstart'); console.log(e)});\r\n\t\t//self.fallback_audio.load();\r\n\t\tself.fallback_audio.play();\r\n\r\n\t\t//audio.addEventListener('play', utterance.onstart);\r\n\r\n\t\tself.fallback_part_index ++;\r\n\r\n\t\tif (self.fallback_part_index < self.fallback_parts.length) {\r\n\r\n\t\t\tself.fallback_audio.addEventListener('ended', self.fallback_finishedplaying);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.cancel = function() {\r\n\t\tself.checkAndCancelTimeout();\r\n\r\n\t\tif (fallbackMode)\r\n\t\t\tself.fallback_audio.pause();\r\n\t\telse\r\n\t\t\tself.cancelled = true;\r\n\t\t\tspeechSynthesis.cancel();\r\n\t}\r\n\r\n\r\n\tthis.voiceSupport = function() {\r\n\r\n\t\treturn ('speechSynthesis' in window);\r\n\r\n\t}\r\n\r\n\tself.numToWords = function (n) {\r\n\t\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\n\t\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\r\n\r\n\t\tvar arr = function arr(x) {\r\n\t\t\t\treturn Array.from(x);\r\n\t\t};\r\n\r\n\t\tvar num = function num(x) {\r\n\t\t\t\treturn Number(x) || 0;\r\n\t\t};\r\n\r\n\t\tvar isEmpty = function isEmpty(xs) {\r\n\t\t\t\treturn xs.length === 0;\r\n\t\t};\r\n\r\n\t\tvar take = function take(n) {\r\n\t\t\t\treturn function (xs) {\r\n\t\t\t\t\t\treturn xs.slice(0, n);\r\n\t\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar drop = function drop(n) {\r\n\t\t\t\treturn function (xs) {\r\n\t\t\t\t\t\treturn xs.slice(n);\r\n\t\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar reverse = function reverse(xs) {\r\n\t\t\t\treturn xs.slice(0).reverse();\r\n\t\t};\r\n\r\n\t\tvar comp = function comp(f) {\r\n\t\t\t\treturn function (g) {\r\n\t\t\t\t\t\treturn function (x) {\r\n\t\t\t\t\t\t\t\treturn f(g(x));\r\n\t\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar not = function not(x) {\r\n\t\t\t\treturn !x;\r\n\t\t};\r\n\r\n\t\tvar chunk = function chunk(n) {\r\n\t\t\t\treturn function (xs) {\r\n\t\t\t\t\t\treturn isEmpty(xs) ? [] : [take(n)(xs)].concat(_toConsumableArray(chunk(n)(drop(n)(xs))));\r\n\t\t\t\t};\r\n\t\t};\r\n\r\n\t\tvar a = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\r\n\r\n\t\tvar b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n\t\tvar g = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'];\r\n\r\n\t\t// this part is really nasty still\r\n\t\t// it might edit this again later to show how Monoids could fix this up\r\n\t\tvar makeGroup = function makeGroup(_ref) {\r\n\t\t\t\tvar _ref2 = _slicedToArray(_ref, 3);\r\n\r\n\t\t\t\tvar ones = _ref2[0];\r\n\t\t\t\tvar tens = _ref2[1];\r\n\t\t\t\tvar huns = _ref2[2];\r\n\r\n\t\t\t\treturn [num(huns) === 0 ? '' : a[huns] + ' hundred ', num(ones) === 0 ? b[tens] : b[tens] && b[tens] + ' ' || '', a[tens + ones] || a[ones]].join('');\r\n\t\t};\r\n\r\n\t\tvar thousand = function thousand(group, i) {\r\n\t\t\t\treturn group === '' ? group : group + ' ' + g[i];\r\n\t\t};\r\n\r\n\t\tif (typeof n === 'number') return self.numToWords(String(n));else if (n === '0') return 'zero';else return comp(chunk(3))(reverse)(arr(n)).map(makeGroup).map(thousand).filter(comp(not)(isEmpty)).reverse().join(' ').trim();\r\n\t};\r\n\r\n\tself.getWords = function (text) {\r\n\t\t\tvar words = text.split(/(\\s*[\\s,]\\s*|\\?|;|:|\\.|\\(|\\)|!)/),\r\n\t\t\t\t\tmatch;\r\n\r\n\t\t\twords = words.filter(function(str) {\r\n\t\t\t\t\treturn /[^\\s]/.test(str);\r\n\t\t\t});\r\n\r\n\t\t\t//find numbers, translate them to text, push as words\r\n\t\t\tfor (var i = 0; i < words.length; i++) {\r\n\t\t\t\t\tif ((match = words[i].toString().match(/\\d+/)) != null) {\r\n\t\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t\t\tself.numToWords(+match[0]).split(/\\s+/).map(function (word){\r\n\t\t\t\t\t\t\t\t\twords.push(word);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn words;\r\n\t};\r\n\r\n\tself.getEstimatedTimeLength = function (text, multiplier) {\r\n\t\t\tvar words = self.getWords(text),\r\n\t\t\t\t\tcharsCount = 0,\r\n\t\t\t\t\tbase = fallbackMode ? 1300 : 700,\r\n\t\t\t\t\tmultiplier = multiplier || 1/*, minWordLengthInText = 0, maxWordLengthInText = 0*/;\r\n\r\n\t\t\twords.map(function (word, i){\r\n\t\t\t\t\tcharsCount += (word.toString().match(/[^ ]/igm) || word).length;\r\n\r\n\t\t\t\t\t /*self.log(minWordLengthInText, maxWordLengthInText);\r\n\t\t\t\t\t if (minWordLengthInText > 0 && minWordLengthInText > word.length) {\r\n\t\t\t\t\t minWordLengthInText = word.length;\r\n\t\t\t\t\t } else if (maxWordLengthInText > 0 && maxWordLengthInText < word.length) {\r\n\t\t\t\t\t maxWordLengthInText = word.length;\r\n\t\t\t\t\t } else if (minWordLengthInText == 0 && maxWordLengthInText == 0) {\r\n\t\t\t\t\t minWordLengthInText = maxWordLengthInText = word.length;\r\n\t\t\t\t\t }*/\r\n\t\t\t});\r\n\r\n\t\t\t//self.log(\"Words: [\" + words + \"], charsCount: \" + charsCount);\r\n\r\n\t\t\tvar wordsCount = words.length;\r\n\t\t\t//var avgWordLengthInText = (minWordLengthInText + maxWordLengthInText) / 2;\r\n\r\n\t\t\t//self.log(minWordLengthInText, maxWordLengthInText, avgWordLengthInText);\r\n\r\n\t\t\t//var wlf = (charsCount/wordsCount) / avgWordLengthInText * 5.1; //word length factor: 5.1 is the average word length in english.\r\n\r\n\t\t\tvar estimatedLength = multiplier * 1000 * (60 / self.WORDS_PER_MINUTE) * wordsCount /** wlf*/;\r\n\r\n\t\t\tif (wordsCount < 5) {\r\n\t\t\t\t\testimatedLength = multiplier * (base + charsCount * 50);\r\n\t\t\t}\r\n\r\n\t\t\tself.log(\"Estimated time length: \" + estimatedLength + \" ms, words: [\" + words + \"], charsCount: \" + charsCount);\r\n\r\n\t\t\treturn estimatedLength;\r\n\t};\r\n\r\n\tself.startTimeout = function (text, callback) {\r\n\t\t\t//if (self.iOS) {\r\n\t\t\t//   multiplier = 0.5;\r\n\t\t\t//}\r\n\t\t\tvar multiplier = self.msgprofile.collectionvoice.timerSpeed;\r\n\t\t\tif (self.msgprofile.collectionvoice.timerSpeed==null)\r\n\t\t\t\t\tmultiplier = 1;\r\n\r\n\t\t\t//self.log(self.msgprofile.collectionvoice.name);\r\n\t\t\tif (multiplier <=0)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\tself.timeoutId = setTimeout(callback, self.getEstimatedTimeLength(text, multiplier));\r\n\t\t\t//console.log(self.getEstimatedTimeLength(text, multiplier),callback);\r\n\t\t\tself.log(\"Timeout ID: \" + self.timeoutId, text);\r\n\t}\r\n\r\n\tself.isPlaying = function() {\r\n\t\t\tif (self.fallbackMode) {\r\n\t\t\t\t\treturn  (self.fallback_audio!=null &&\r\n\t\t\t\t\t\t\t\t\t!self.fallback_audio.ended &&\r\n\t\t\t\t\t\t\t\t\t!self.fallback_audio.paused);\r\n\t\t\t}else{\r\n\t\t\t\t\treturn speechSynthesis.speaking;\r\n\t\t\t}\r\n\t}\r\n\r\n\tself.checkAndCancelTimeout = function () {\r\n\t\t\tif (self.timeoutId != null) {\r\n\t\t\t\t\t//self.log(\"Timeout \" + self.timeoutId + \" cancelled\");\r\n\t\t\t\t\tclearTimeout(self.timeoutId);\r\n\t\t\t\t\tself.timeoutId = null;\r\n\t\t\t}\r\n\t}\r\n\r\n\tself.speech_timedout = function() {\r\n\t\t\t//self.log(\"Speech cancelled: Timeout \" + self.timeoutId + \" ended\");\r\n\t\t\tself.cancel();\r\n\t\t\tself.cancelled = false;\r\n\t\t\t//if (!self.iOS) //On iOS, cancel calls msg.onend\r\n\t\t\t\t\tself.speech_onend();\r\n\r\n\t}\r\n\r\n\tself.speech_onstart = function () {\r\n\t\t\t//Start can be triggered after onboundary!\r\n\t\t\t//if (self.onstartFired) return\r\n\r\n\t\t\tself.onstartFired = true;\r\n\t\t\t//if (!self.iOS)\r\n\t\t\tself.log(\"Speech start\");\r\n\t\t\tif (!self.fallbackMode) {\r\n\t\t\t\tself.startTimeout(self.msgtext,self.speech_timedout);\r\n\t\t\t}\r\n\r\n\t\t\tself.msgparameters.onendcalled=false;\r\n\t\t\tif (self.msgparameters != null && self.msgparameters.onstart != null) {\r\n\t\t\t\t\tself.msgparameters.onstart();\r\n\t\t\t}\r\n\t}\r\n\r\n\tself.speech_onend = function () {\r\n\t\tself.checkAndCancelTimeout();\r\n\r\n\t\t//Avoid this being automatically called just after calling speechSynthesis.cancel\r\n\t\tif (self.cancelled === true) {\r\n\t\t\t\tself.cancelled = false;\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself.log(\"on end fired\");\r\n\r\n\t\tif (self.msgparameters != null && self.msgparameters.onend != null && self.msgparameters.onendcalled!=true) {\r\n\t\t\tself.log(\"Speech on end called  -\" + self.msgtext);\r\n\t\t\tself.msgparameters.onendcalled=true;\r\n\t\t\tif (!self.isPlaying()) {\r\n\t\t\t\tself.msgparameters.onend();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('still talking');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.OnFinishedPlaying = function(event) {\r\n\t\t//console.log(parameters);\r\n\t\tif (self.msgparameters != null) {\r\n\t\t\tif (self.msgparameters.onend != null ) {\r\n\t\t\t\tself.msgparameters.onend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Set default voice to use when no voice name is supplied to speak()\r\n\tthis.setDefaultVoice = function(voicename) {\r\n\r\n\t\tvar vr = getResponsiveVoice(voicename);\r\n\r\n\t\tif (vr!=null) {\r\n\t\t\tself.default_vr = vr;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//Map responsivevoices to system voices\r\n\tfunction mapRVs() {\r\n\r\n\t\tfor (var i=0; i<responsivevoices.length; i++) {\r\n\r\n\t\t\tvar rv = responsivevoices[i];\r\n\r\n\t\t\tfor (var j=0; j<rv.voiceIDs.length; j++) {\r\n\r\n\t\t\t\tvar vcoll = voicecollection[rv.voiceIDs[j]];\r\n\r\n\t\t\t\tif (vcoll.fallbackvoice != true) {\t\t// vcoll.fallbackvoice would be null instead of false\r\n\r\n\t\t\t\t\t// Look on system voices\r\n\t\t\t\t\tvar v = getSystemVoice(vcoll.name);\r\n\t\t\t\t\tif (v!=null) {\r\n\t\t\t\t\t\trv.mappedProfile = {\r\n\t\t\t\t\t\t\tsystemvoice: v,\r\n\t\t\t\t\t\t\tcollectionvoice: vcoll\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tconsole.log(\"Mapped \" + rv.name + \" to \" + v.name);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else {\r\n\r\n\t\t\t\t\t//Pick the fallback voice\r\n\t\t\t\t\trv.mappedProfile = {\r\n\t\t\t\t\t\tsystemvoice: {},\r\n\t\t\t\t\t\tcollectionvoice: vcoll\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconsole.log(\"Mapped \" + rv.name + \" to \" + vcoll.lang + \" fallback voice\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\t//Look for the voice in the system that matches the one in our collection\r\n\tfunction getMatchedVoice(rv) {\r\n\r\n\t\tfor (var i=0; i<rv.voiceIDs.length; i++) {\r\n\t\t\tvar v = getSystemVoice(voicecollection[rv.voiceIDs[i]].name);\r\n\t\t\tif (v!=null)\r\n\t\t\t\treturn v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction getSystemVoice(name) {\r\n\r\n\t\tif (typeof systemvoices === 'undefined') return null;\r\n\r\n\t\tfor (var i=0; i<systemvoices.length; i++) {\r\n\t\t\tif (systemvoices[i].name == name)\r\n\t\t\t\treturn systemvoices[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction getResponsiveVoice(name) {\r\n\r\n\t\tfor (var i=0; i<responsivevoices.length; i++) {\r\n\t\t\tif (responsivevoices[i].name == name) {\r\n\t\t\t\treturn responsivevoices[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n}\r\n)();\r\n\r\nmodule.exports = responsiveVoice;\r\n"],"sourceRoot":""}