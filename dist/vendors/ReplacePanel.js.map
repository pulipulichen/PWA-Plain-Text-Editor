{"version":3,"sources":["webpack:///./src/components/ReplacePanel/ReplacePanel.yaml","webpack:///./src/components/ReplacePanel/ReplacePanel.less","webpack:///./src/components/ReplacePanel/ReplacePanel.html?c8e1","webpack:///./src/components/ReplacePanel/ReplacePanel.less?26f3","webpack:///./src/components/ReplacePanel/ReplacePanel.html","webpack:///./src/components/ReplacePanel/ReplacePanel.js?5a53","webpack:///./src/components/ReplacePanel/ReplacePanel.js","webpack:///./src/components/ReplacePanel/ReplacePanel.less?b0e6","webpack:///./src/components/ReplacePanel/ReplacePanel.vue","webpack:///./src/components/ReplacePanel/ReplacePanel.yaml?8b76","webpack:///./src/components/ReplacePanel/ReplacePanelComputed.js","webpack:///./src/components/ReplacePanel/ReplacePanelComputedCalc.js","webpack:///./src/components/ReplacePanel/ReplacePanelComputedFormat.js","webpack:///./src/components/ReplacePanel/ReplacePanelComputedTrim.js","webpack:///./src/components/ReplacePanel/ReplacePanelData.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsCalc.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsFormat.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsInput.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsReplace.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsSearch.js","webpack:///./src/components/ReplacePanel/ReplacePanelMethodsTrim.js","webpack:///./src/components/ReplacePanel/ReplacePanelWatch.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA,kCAAkC,MAAM,8BAA8B,UAAU,uBAAuB;AACvG;AACA;;;;;;;;;;;;ACJA;AACA,kCAAkC,mBAAO,CAAC,2GAAsD;AAChG;AACA;AACA,cAAc,QAAS,oCAAoC,8BAA8B,kCAAkC,2BAA2B,+BAA+B,cAAc,iBAAiB,YAAY,GAAG,+CAA+C,iBAAiB,oBAAoB,GAAG,0CAA0C,2BAA2B,GAAG,yCAAyC,2BAA2B,0BAA0B,sBAAsB,sBAAsB,+BAA+B,GAAG,2DAA2D,sDAAsD,GAAG,qEAAqE,4DAA4D,GAAG,2EAA2E,4DAA4D,GAAG,yGAAyG,6DAA6D,GAAG,yIAAyI,oEAAoE,GAAG,yJAAyJ,6EAA6E,GAAG,yHAAyH,sEAAsE,GAAG,0CAA0C,gBAAgB,8BAA8B,iCAAiC,mCAAmC,GAAG,wDAAwD,qCAAqC,GAAG,yDAAyD,oBAAoB,GAAG,6EAA6E,0BAA0B,GAAG,mDAAmD,2BAA2B,GAAG,wDAAwD,2BAA2B,GAAG,gEAAgE,2BAA2B,GAAG,yDAAyD,gBAAgB,oBAAoB,uBAAuB,4BAA4B,wBAAwB,qCAAqC,oCAAoC,qCAAqC,GAAG,kCAAkC,kCAAkC,GAAG,+DAA+D,iBAAiB,6CAA6C,0CAA0C,GAAG,mDAAmD,4CAA4C,yCAAyC,GAAG,SAAS,uOAAuO,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,UAAU,KAAK,KAAK,WAAW,UAAU,KAAK,KAAK,YAAY,KAAK,KAAK,YAAY,WAAW,WAAW,WAAW,WAAW,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,YAAY,MAAM,MAAM,WAAW,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,YAAY,MAAM,MAAM,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,MAAM,MAAM,WAAW,MAAM,MAAM,UAAU,WAAW,WAAW,MAAM,MAAM,WAAW,WAAW,qEAAqE,sBAAsB,kCAAkC,sCAAsC,8BAA8B,6BAA6B,8BAA8B,kCAAkC,0BAA0B,2BAA2B,mCAAmC,cAAc,iBAAiB,YAAY,yBAAyB,mBAAmB,yBAAyB,sBAAsB,KAAK,gBAAgB,6BAA6B,MAAM,eAAe,oCAAoC,4BAA4B,wBAAwB,wBAAwB,iCAAiC,KAAK,qCAAqC,+BAA+B,iCAAiC,+EAA+E,WAAW,2CAA2C,qFAAqF,KAAK,iDAAiD,2FAA2F,2CAA2C,uGAAuG,OAAO,+CAA+C,iHAAiH,+CAA+C,uIAAuI,SAAS,iEAAiE,0JAA0J,SAAS,OAAO,6DAA6D,0HAA0H,OAAO,KAAK,iBAAiB,kBAAkB,gCAAgC,mCAAmC,qCAAqC,KAAK,wBAAwB,aAAa,yCAAyC,OAAO,oBAAoB,wBAAwB,OAAO,kCAAkC,8BAA8B,OAAO,KAAK,yBAAyB,6BAA6B,mCAAmC,KAAK,8BAA8B,gDAAgD,KAAK,kCAAkC,oDAAoD,KAAK,+BAA+B,iCAAiC,qCAAqC,yBAAyB,8BAA8B,0BAA0B,uCAAuC,4CAA4C,uCAAuC,KAAK,GAAG,mBAAmB,kCAAkC,GAAG,4BAA4B,yBAAyB,mBAAmB,+CAA+C,4CAA4C,KAAK,iBAAiB,8CAA8C,2CAA2C,KAAK,GAAG,uBAAuB,8BAA8B,kCAAkC,2BAA2B,+BAA+B,cAAc,iBAAiB,YAAY,GAAG,8BAA8B,iBAAiB,oBAAoB,GAAG,yBAAyB,2BAA2B,GAAG,wBAAwB,2BAA2B,0BAA0B,sBAAsB,sBAAsB,+BAA+B,GAAG,0CAA0C,sDAAsD,GAAG,oDAAoD,4DAA4D,GAAG,0DAA0D,4DAA4D,GAAG,wFAAwF,6DAA6D,GAAG,wHAAwH,oEAAoE,GAAG,wIAAwI,6EAA6E,GAAG,wGAAwG,sEAAsE,GAAG,yBAAyB,gBAAgB,8BAA8B,iCAAiC,mCAAmC,GAAG,uCAAuC,qCAAqC,GAAG,wCAAwC,oBAAoB,GAAG,4DAA4D,0BAA0B,GAAG,kCAAkC,2BAA2B,GAAG,uCAAuC,2BAA2B,GAAG,+CAA+C,2BAA2B,GAAG,wCAAwC,gBAAgB,oBAAoB,uBAAuB,4BAA4B,wBAAwB,qCAAqC,oCAAoC,qCAAqC,GAAG,iBAAiB,kCAAkC,GAAG,8CAA8C,iBAAiB,6CAA6C,0CAA0C,GAAG,kCAAkC,4CAA4C,yCAAyC,GAAG,KAAK;AACt/T;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,8BAA8B;AAC/C,qBAAqB,SAAS,wBAAwB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe,4DAA4D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,6BAA6B,wCAAwC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD,wBAAwB,iBAAiB;AACzC,qBAAqB;AACrB,eAAe;AACf,wBAAwB,gDAAgD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD,wBAAwB,iBAAiB;AACzC,qBAAqB;AACrB,eAAe;AACf,wBAAwB,iDAAiD;AACzE;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD,uBAAuB,SAAS,6BAA6B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB,4DAA4D;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,6CAA6C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,SAAS,+BAA+B,EAAE;AAC1E;AACA;AACA;AACA,gCAAgC,SAAS,eAAe,EAAE;AAC1D;AACA,gCAAgC,SAAS,gBAAgB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,SAAS,kBAAkB,EAAE;AAC7D;AACA;AACA;AACA,gCAAgC,SAAS,kBAAkB,EAAE;AAC7D;AACA;AACA;AACA,gCAAgC,SAAS,iBAAiB,EAAE;AAC5D;AACA;AACA;AACA,gCAAgC,SAAS,gBAAgB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,0BAA0B,wCAAwC;AAClE,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC,kBAAkB,EAAE;AAC9E,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA,eAAe,4DAA4D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC,SAAS,gBAAgB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,oCAAoC,SAAS,oBAAoB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,wBAAwB,EAAE;AAC1D;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,wBAAwB,sCAAsC;AAC9D,qBAAqB;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACncA;;AAEA;AACA,cAAc,mBAAO,CAAC,igBAAgQ;AACtR,4CAA4C,QAAS;AACrD;AACA;AACA,UAAU,mBAAO,CAAC,6HAAgE;AAClF,+CAA+C;AAC/C;AACA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACVf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA,wCAA+D,CAAgB,gJAAG,EAAC,C;;;;;;;;;;;;ACAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA,WAAW;AACX,cAAc;AACd;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA;;AAEoD;AACpD,oEAAgB;;;AAGsC;AACtD,qEAAiB;;AAEjB;;AAE4D;AAC5D,wEAAoB;;AAEgD;AACpE,4EAAwB;;AAE4C;AACpE,4EAAwB;;AAEgD;AACxE,8EAA0B;;AAE1B;AACoE;AACpE,4EAAwB;;AAEgD;AACxE,8EAA0B;;AAE4C;AACtE,6EAAyB;;AAEyC;AAClE,2EAAuB;;AAE+C;AACtE,8EAAyB;;AAEyC;AAClE,4EAAuB;;AAER,2E;;;;;;;;;;;;AChFf;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwG;AACzC;AACL;AACwC;;;AAGlG;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B,EAAE,iFAAM;AACR,EAAE,oGAAM;AACR,EAAE,6GAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACwN;AACxN,WAAW,0OAAM,iBAAiB,kPAAM;;AAExC;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;AC3Cf;AAAA;AAAA;AAAA;AAAoR,CAAgB,0VAAG,EAAC,C;;;;;;;;;;;;ACAxS;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C,KAAK;AACL;AACA,yBAAyB,OAAO;AAChC,KAAK;AACL;AACA,yBAAyB,OAAO;AAChC,KAAK;AACL;AACA,yBAAyB,OAAO;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;;AAEA,C;;;;;;;;;;;;AC5MA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;AACtC;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,C;;;;;;;;;;;;AC1DA;AAAe;;AAEf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACrEA;AAAe;;AAEf;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,C;;;;;;;;;;;;AChEA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACbA;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACLD;AAAA;AACA;;;AAGe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3CD;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1KD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC7GD;AAAA;AAAA;AAAsB;;AAEP;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,yCAAyC;AACzC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,CAAC;;;;;;;;;;;;;ACnGD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C","file":"vendors/ReplacePanel.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"TEST_MESSAGE\":\"Test Message\"},\"zh-TW\":{\"TEST_MESSAGE\":\"測試訊息\"}}')\n  delete Component.options._Ctor\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \".replace-panel[data-v-8d37a762] {\\n  background-color: #e1f7f7;\\n  border-top: 1px solid #10a3a3;\\n  padding-bottom: 0.5rem;\\n  position: fixed !important;\\n  bottom: 0;\\n  width: 100vw;\\n  left: 0;\\n}\\n.replace-panel .close-icon[data-v-8d37a762] {\\n  float: right;\\n  cursor: pointer;\\n}\\n.replace-panel .field[data-v-8d37a762] {\\n  clear: none !important;\\n}\\n.replace-panel label[data-v-8d37a762] {\\n  width: 6rem !important;\\n  display: inline-block;\\n  text-align: right;\\n  user-select: none;\\n  cursor: pointer !important;\\n}\\n.replace-panel .string-to-search-input[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 1rem) !important;\\n}\\n.replace-panel .string-to-search-input-container[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 2rem - 1px) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 1rem - 1px) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container .string-to-replace-with-input[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 3rem - 9rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-replace-line-options-select .string-to-replace-with-input[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 3rem - 9rem - 8rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-replace-line-options-select.has-undo-button .string-to-replace-with-input[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 4rem - 2.5rem - 9rem - 8rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-undo-button .string-to-replace-with-input[data-v-8d37a762] {\\n  width: calc(100% - 6rem - 0rem - 4rem - 2.5rem - 9rem) !important;\\n}\\n.replace-panel select[data-v-8d37a762] {\\n  width: 8rem;\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n  white-space: nowrap !important;\\n}\\n.replace-panel .ui.icon.input input[data-v-8d37a762] {\\n  padding-right: 4.5rem !important;\\n}\\n.replace-panel .ui.icon.input i.icon[data-v-8d37a762] {\\n  cursor: pointer;\\n}\\n.replace-panel .ui.icon.input i.icon[data-v-8d37a762]:not(:first-of-type) {\\n  right: 2em !important;\\n}\\n.replace-panel .checkbox label[data-v-8d37a762] {\\n  width: auto !important;\\n}\\n.replace-panel .replace-mode-select[data-v-8d37a762] {\\n  width: 8rem !important;\\n}\\n.replace-panel .replace-line-options-select[data-v-8d37a762] {\\n  width: 8rem !important;\\n}\\n.replace-panel .replace-count-button[data-v-8d37a762] {\\n  width: 9rem;\\n  max-width: 9rem;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  display: inline-block !important;\\n  padding-left: 0.5rem !important;\\n  padding-right: 0.5rem !important;\\n}\\n.inline.field[data-v-8d37a762] {\\n  margin-top: 0.5rem !important;\\n}\\n.format-tool-container .format-tool-select[data-v-8d37a762] {\\n  width: 13rem;\\n  border-bottom-right-radius: 0 !important;\\n  border-top-right-radius: 0 !important;\\n}\\n.format-tool-container .button[data-v-8d37a762] {\\n  border-bottom-left-radius: 0 !important;\\n  border-top-left-radius: 0 !important;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"D:/xampp/htdocs/projects-html5/PWA-Plain-Text-Editor/src/components/ReplacePanel/ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\",\"ReplacePanel.less\"],\"names\":[],\"mappings\":\"AAAA;EAME,yBAAA;EACA,6BAAA;EAEA,sBAAA;EAEA,0BAAA;EACA,SAAA;EACA,YAAA;EACA,OAAA;ACNF;ADRA;EAkBI,YAAA;EAEA,eAAA;ACRJ;ADZA;EAwBI,sBAAA;ACTJ;ADfA;EA4BI,sBAAA;EACA,qBAAA;EACA,iBAAA;EACA,iBAAA;EACA,0BAAA;ACVJ;ADtBA;EAuCI,iDAAA;ACdJ;ADzBA;EA4CI,uDAAA;AChBJ;AD5BA;EAiDI,uDAAA;AClBJ;AD/BA;EAoDM,wDAAA;AClBN;ADqBI;EAII,+DAAA;ACtBR;ADyBM;EACE,wEAAA;ACvBR;AD2BI;EACE,iEAAA;ACzBN;AD3CA;EAyEI,WAAA;EACA,yBAAA;EACA,4BAAA;EACA,8BAAA;AC3BJ;ADjDA;EAiFM,gCAAA;AC7BN;ADpDA;EAqFM,eAAA;AC9BN;ADvDA;EAwFM,qBAAA;AC9BN;AD1DA;EA6FI,sBAAA;AChCJ;AD7DA;EAkGI,sBAAA;AClCJ;ADhEA;EAqGI,sBAAA;AClCJ;ADnEA;EAyGI,WAAA;EACA,eAAA;EACA,kBAAA;EACA,uBAAA;EACA,mBAAA;EACA,gCAAA;EAEA,+BAAA;EACA,gCAAA;ACpCJ;ADwCA;EACE,6BAAA;ACtCF;ADyCA;EAEI,YAAA;EACA,wCAAA;EACA,qCAAA;ACxCJ;ADoCA;EAQI,uCAAA;EACA,oCAAA;ACzCJ\",\"file\":\"ReplacePanel.less\",\"sourcesContent\":[\".replace-panel {\\n  @labelWidth: 6rem;\\n  @ReplaceModeSelectWidth: 8rem;\\n  @ReplaceLineModeSelectWidth: 8rem;\\n  @ReplaceButtonWidth: 9rem;\\n  @UndoButtonWidth: 2.5rem;\\n  background-color: #e1f7f7;\\n  border-top: 1px solid #10a3a3;\\n  //padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n  \\n  position: fixed !important;\\n  bottom: 0;\\n  width: 100vw;\\n  left: 0;\\n  \\n  \\n  .close-icon {\\n    float: right;\\n    //margin-top: 1rem;\\n    cursor: pointer;\\n  }\\n  \\n  .field {\\n    clear: none !important; \\n  }\\n  \\n  label {\\n    width: @labelWidth !important;\\n    display: inline-block;\\n    text-align: right;\\n    user-select: none;\\n    cursor: pointer !important;\\n  }\\n  \\n  //@closePanelIconWidth: 1rem;\\n  @closePanelIconWidth: 0rem;\\n  \\n  .string-to-search-input {\\n    width: calc(100% - @labelWidth - @closePanelIconWidth - 1rem) !important;\\n    \\n  }\\n  \\n  .string-to-search-input-container {\\n    width: calc(100% - @labelWidth - @closePanelIconWidth - 2rem - 1px) !important;\\n  }\\n  \\n  .string-to-replace-with-input-container {\\n    \\n    width: calc(100% - @labelWidth - @closePanelIconWidth - 1rem - 1px) !important;\\n    \\n    .string-to-replace-with-input {\\n      width: calc(100% - @labelWidth - @closePanelIconWidth - 3rem - @ReplaceButtonWidth) !important;\\n    }\\n    \\n    &.has-replace-line-options-select {\\n      //width: calc(100% - @labelWidth - @closePanelIconWidth - 1rem - @ReplaceLineModeSelectWidth) !important;\\n      \\n      .string-to-replace-with-input {\\n        width: calc(100% - @labelWidth - @closePanelIconWidth - 3rem - @ReplaceButtonWidth - @ReplaceLineModeSelectWidth) !important;\\n      }\\n      \\n      &.has-undo-button .string-to-replace-with-input {\\n        width: calc(100% - @labelWidth - @closePanelIconWidth - 4rem - @UndoButtonWidth - @ReplaceButtonWidth - @ReplaceLineModeSelectWidth) !important;\\n      }\\n    }\\n    \\n    &.has-undo-button .string-to-replace-with-input {\\n      width: calc(100% - @labelWidth - @closePanelIconWidth - 4rem - @UndoButtonWidth - @ReplaceButtonWidth) !important;\\n    }\\n  } \\n  \\n  select {\\n    width: 8rem;\\n    padding-top: 0 !important;\\n    padding-bottom: 0 !important;\\n    white-space: nowrap !important;\\n  }\\n  \\n  .ui.icon.input {\\n    input {\\n      padding-right: 4.5rem !important;\\n    }\\n    \\n    i.icon {\\n      cursor: pointer;\\n    }\\n    i.icon:not(:first-of-type) {\\n      right: 2em !important;\\n    }\\n  }\\n  \\n  .checkbox label {\\n    width: auto !important;\\n    //padding-left: 0 !important;\\n  }\\n  \\n  .replace-mode-select {\\n    width: @ReplaceModeSelectWidth !important;\\n  }\\n  .replace-line-options-select {\\n    width: @ReplaceLineModeSelectWidth !important;\\n  }\\n  \\n  .replace-count-button {\\n    width: @ReplaceButtonWidth;\\n    max-width: @ReplaceButtonWidth;\\n    overflow-x: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n    display: inline-block !important;\\n    \\n    padding-left: 0.5rem !important;\\n    padding-right: 0.5rem !important;\\n  }\\n}\\n\\n.inline.field {\\n  margin-top: 0.5rem !important;\\n}\\n\\n.format-tool-container {\\n  .format-tool-select {\\n    width: 13rem;\\n    border-bottom-right-radius: 0 !important;\\n    border-top-right-radius: 0 !important;\\n  }\\n  \\n  .button {\\n    border-bottom-left-radius: 0 !important;\\n    border-top-left-radius: 0 !important;\\n  }\\n}\\n  \",\".replace-panel {\\n  background-color: #e1f7f7;\\n  border-top: 1px solid #10a3a3;\\n  padding-bottom: 0.5rem;\\n  position: fixed !important;\\n  bottom: 0;\\n  width: 100vw;\\n  left: 0;\\n}\\n.replace-panel .close-icon {\\n  float: right;\\n  cursor: pointer;\\n}\\n.replace-panel .field {\\n  clear: none !important;\\n}\\n.replace-panel label {\\n  width: 6rem !important;\\n  display: inline-block;\\n  text-align: right;\\n  user-select: none;\\n  cursor: pointer !important;\\n}\\n.replace-panel .string-to-search-input {\\n  width: calc(100% - 6rem - 0rem - 1rem) !important;\\n}\\n.replace-panel .string-to-search-input-container {\\n  width: calc(100% - 6rem - 0rem - 2rem - 1px) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container {\\n  width: calc(100% - 6rem - 0rem - 1rem - 1px) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container .string-to-replace-with-input {\\n  width: calc(100% - 6rem - 0rem - 3rem - 9rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-replace-line-options-select .string-to-replace-with-input {\\n  width: calc(100% - 6rem - 0rem - 3rem - 9rem - 8rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-replace-line-options-select.has-undo-button .string-to-replace-with-input {\\n  width: calc(100% - 6rem - 0rem - 4rem - 2.5rem - 9rem - 8rem) !important;\\n}\\n.replace-panel .string-to-replace-with-input-container.has-undo-button .string-to-replace-with-input {\\n  width: calc(100% - 6rem - 0rem - 4rem - 2.5rem - 9rem) !important;\\n}\\n.replace-panel select {\\n  width: 8rem;\\n  padding-top: 0 !important;\\n  padding-bottom: 0 !important;\\n  white-space: nowrap !important;\\n}\\n.replace-panel .ui.icon.input input {\\n  padding-right: 4.5rem !important;\\n}\\n.replace-panel .ui.icon.input i.icon {\\n  cursor: pointer;\\n}\\n.replace-panel .ui.icon.input i.icon:not(:first-of-type) {\\n  right: 2em !important;\\n}\\n.replace-panel .checkbox label {\\n  width: auto !important;\\n}\\n.replace-panel .replace-mode-select {\\n  width: 8rem !important;\\n}\\n.replace-panel .replace-line-options-select {\\n  width: 8rem !important;\\n}\\n.replace-panel .replace-count-button {\\n  width: 9rem;\\n  max-width: 9rem;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  display: inline-block !important;\\n  padding-left: 0.5rem !important;\\n  padding-right: 0.5rem !important;\\n}\\n.inline.field {\\n  margin-top: 0.5rem !important;\\n}\\n.format-tool-container .format-tool-select {\\n  width: 13rem;\\n  border-bottom-right-radius: 0 !important;\\n  border-top-right-radius: 0 !important;\\n}\\n.format-tool-container .button {\\n  border-bottom-left-radius: 0 !important;\\n  border-top-left-radius: 0 !important;\\n}\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      directives: [\n        {\n          name: \"show\",\n          rawName: \"v-show\",\n          value: _vm.localConfig.displayPanel === \"replace\",\n          expression: \"localConfig.displayPanel === 'replace'\"\n        }\n      ],\n      staticClass: \"replace-panel ui form\"\n    },\n    [\n      _c(\"div\", { staticClass: \"inline field\" }, [\n        _c(\"label\", { attrs: { for: \"stringToSearch\" } }, [_vm._v(\"Search\")]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          {\n            staticClass: \"ui action icon input string-to-search-input-container\"\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"ui icon fluid input string-to-search-input\" },\n              [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.localConfig.stringToSearch,\n                      expression: \"localConfig.stringToSearch\"\n                    }\n                  ],\n                  ref: \"SearchInput\",\n                  attrs: {\n                    type: \"text\",\n                    placeholder: \"Search...\",\n                    id: \"stringToSearch\"\n                  },\n                  domProps: { value: _vm.localConfig.stringToSearch },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(\n                        _vm.localConfig,\n                        \"stringToSearch\",\n                        $event.target.value\n                      )\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"i\", {\n                  staticClass: \"link paragraph icon\",\n                  attrs: { titl: \"New line\" },\n                  on: {\n                    click: function($event) {\n                      _vm.localConfig.stringToSearch =\n                        _vm.localConfig.stringToSearch + \"\\\\n\"\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.localConfig.stringToSearch\n                  ? _c(\"i\", {\n                      staticClass: \"link close icon\",\n                      attrs: { titl: \"Clear\" },\n                      on: {\n                        click: function($event) {\n                          _vm.localConfig.stringToSearch = \"\"\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"ui compact button\",\n                class: { disabled: !_vm.isSearchEnabled },\n                attrs: { type: \"button\" },\n                on: { click: _vm.findPrev }\n              },\n              [_c(\"i\", { staticClass: \"long arrow alternate left icon\" })]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"ui compact button\",\n                class: { disabled: !_vm.isSearchEnabled },\n                attrs: { type: \"button\" },\n                on: { click: _vm.findNext }\n              },\n              [_c(\"i\", { staticClass: \"long arrow alternate right icon\" })]\n            )\n          ]\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"inline field\" }, [\n          _c(\"label\", { attrs: { for: \"stringToReplaceWith\" } }, [\n            _vm._v(\"Replace with\")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass:\n                \"ui action icon input string-to-replace-with-input-container\",\n              class: _vm.computedReplaceInputClassName\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"ui icon input string-to-replace-with-input\" },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.localConfig.stringToReplaceWith,\n                        expression: \"localConfig.stringToReplaceWith\"\n                      }\n                    ],\n                    ref: \"ReplaceInput\",\n                    attrs: {\n                      type: \"text\",\n                      placeholder: \"Replace with...\",\n                      id: \"stringToReplaceWith\"\n                    },\n                    domProps: { value: _vm.localConfig.stringToReplaceWith },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.localConfig,\n                          \"stringToReplaceWith\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"i\", {\n                    staticClass: \"link paragraph icon\",\n                    attrs: { titl: \"New line\" },\n                    on: {\n                      click: function($event) {\n                        _vm.localConfig.stringToReplaceWith =\n                          _vm.localConfig.stringToReplaceWith + \"\\\\n\"\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.localConfig.stringToReplaceWith\n                    ? _c(\"i\", {\n                        staticClass: \"link close icon\",\n                        attrs: { titl: \"Clear\" },\n                        on: {\n                          click: function($event) {\n                            _vm.localConfig.stringToReplaceWith = \"\"\n                          }\n                        }\n                      })\n                    : _vm._e()\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.localConfig.replaceMode,\n                      expression: \"localConfig.replaceMode\"\n                    }\n                  ],\n                  staticClass:\n                    \"ui compact selection dropdown replace-mode-select\",\n                  on: {\n                    change: function($event) {\n                      var $$selectedVal = Array.prototype.filter\n                        .call($event.target.options, function(o) {\n                          return o.selected\n                        })\n                        .map(function(o) {\n                          var val = \"_value\" in o ? o._value : o.value\n                          return val\n                        })\n                      _vm.$set(\n                        _vm.localConfig,\n                        \"replaceMode\",\n                        $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      )\n                    }\n                  }\n                },\n                [\n                  _c(\"option\", { attrs: { selected: \"\", value: \"regex\" } }, [\n                    _vm._v(\"Regex\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"raw\" } }, [_vm._v(\"Raw\")]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"line\" } }, [_vm._v(\"Line\")])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.localConfig.replaceLineOptions.mode,\n                      expression: \"localConfig.replaceLineOptions.mode\"\n                    },\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.showReplaceLineOptionsSelect,\n                      expression: \"showReplaceLineOptionsSelect\"\n                    }\n                  ],\n                  staticClass:\n                    \"ui compact selection dropdown replace-line-options-select\",\n                  on: {\n                    change: function($event) {\n                      var $$selectedVal = Array.prototype.filter\n                        .call($event.target.options, function(o) {\n                          return o.selected\n                        })\n                        .map(function(o) {\n                          var val = \"_value\" in o ? o._value : o.value\n                          return val\n                        })\n                      _vm.$set(\n                        _vm.localConfig.replaceLineOptions,\n                        \"mode\",\n                        $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      )\n                    }\n                  }\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"prefix\" } }, [\n                    _vm._v(\"Prefix\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"suffix\" } }, [\n                    _vm._v(\"Suffix\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"first\" } }, [\n                    _vm._v(\"First\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"last\" } }, [_vm._v(\"Last\")])\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"ui button replace-count-button\",\n                  class: {\n                    disabled: _vm.isReplaceDisabled,\n                    positive: !_vm.isReplaceDisabled\n                  },\n                  attrs: { title: _vm.computedReplaceButtonTitle },\n                  on: { click: _vm.doReplace }\n                },\n                [\n                  _vm._v(\n                    \"\\n          \" +\n                      _vm._s(_vm.computedReplaceButtonText) +\n                      \"\\n        \"\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              !_vm.isUndoDisabled\n                ? _c(\n                    \"div\",\n                    { staticClass: \"ui mini button\", on: { click: _vm.undo } },\n                    [_c(\"i\", { staticClass: \"undo icon\" })]\n                  )\n                : _vm._e()\n            ]\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"inline fields\" }, [\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\"label\", [_vm._v(\"Format\")]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"ui action icon input format-tool-container\" },\n              [\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.localConfig.formatTool,\n                        expression: \"localConfig.formatTool\"\n                      }\n                    ],\n                    staticClass:\n                      \"ui compact selection dropdown format-tool-select\",\n                    on: {\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.$set(\n                          _vm.localConfig,\n                          \"formatTool\",\n                          $event.target.multiple\n                            ? $$selectedVal\n                            : $$selectedVal[0]\n                        )\n                      }\n                    }\n                  },\n                  [\n                    _c(\"optgroup\", { attrs: { label: \"Trim\" } }, [\n                      _c(\n                        \"option\",\n                        {\n                          attrs: {\n                            value: \"lines-trim\",\n                            disabled: _vm.isTrimDisabled\n                          }\n                        },\n                        [_vm._v(\"Lines Trim\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"option\",\n                        {\n                          attrs: {\n                            value: \"lines-ltrim\",\n                            disabled: _vm.isLTrimDisabled\n                          }\n                        },\n                        [_vm._v(\"Lines Left Trim\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"option\",\n                        {\n                          attrs: {\n                            value: \"lines-rtrim\",\n                            disabled: _vm.isRTrimDisabled\n                          }\n                        },\n                        [_vm._v(\"Lines Right Trim\")]\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"optgroup\", { attrs: { label: \"Compress\" } }, [\n                      _c(\n                        \"option\",\n                        {\n                          attrs: {\n                            value: \"code-minifiy\",\n                            disabled: _vm.isMinifyDisabled\n                          }\n                        },\n                        [_vm._v(\"Minify\")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"option\",\n                        {\n                          attrs: {\n                            value: \"code-beautify\",\n                            disabled: _vm.isBeautifyDisabled\n                          }\n                        },\n                        [_vm._v(\"Beautify\")]\n                      )\n                    ])\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"ui button\",\n                    class: _vm.computedFormatActionButtonClassNameList,\n                    on: { click: _vm.doFormat }\n                  },\n                  [_vm._v(\"\\n            Format\\n          \")]\n                )\n              ]\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"label\", { attrs: { for: \"calcCopyButton\" } }, [\n            _vm._v(\"\\n        Calculator\\n      \")\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"field\" }, [\n            _c(\n              \"div\",\n              {\n                staticClass: \"ui button calc-button\",\n                class: _vm.computedCalcButtonClassName,\n                attrs: { id: \"calcCopyButton\", title: \"Copy\" },\n                on: { click: _vm.copyCalcResult }\n              },\n              [_c(\"span\", [_vm._v(_vm._s(_vm.computedCalcButtonText))])]\n            )\n          ])\n        ])\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b313e334\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\", function() {\n     var newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./ReplacePanel.html?vue&type=template&id=8d37a762&scoped=true&\"","import mod from \"-!./ReplacePanel.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./ReplacePanel.js?vue&type=script&lang=js&\"","/* global PULI_UTILS, CodeMirror */\n\nlet ReplacePanel = {\n  props: ['config', 'localConfig', 'utils'],\n  data: null,\n  watch: {}, // 轉移到 ReplacePanelWatch.js\n  computed: {}, // 轉移到 ReplacePanelComputed.js\n  mounted() {\n    this.setPanelHeight()\n  },\n  methods: {\n    setPanelHeight() {\n      //console.log('setPanelHeight', this.localConfig.displayReplacePanel, this.localConfig.replaceMode)\n      if (this.localConfig.displayPanel === 'replace') {\n//        if (this.localConfig.replaceMode === 'line') {\n//          this.config.panelHeight = '12rem'\n//        }\n//        else {\n//          this.config.panelHeight = '8rem'\n//        }\n        this.config.panelHeight = this.panelHeight\n      }\n      //console.log(this.config.panelHeight)\n    },\n    \n    /*\n    clearTextContentConfirm() {\n      if (window.confirm('Are you sure?')) {\n        this.localConfig.textContent = ''\n        this.clearHistory()\n      }\n    },\n    */\n    \n    \n  }\n}\n\n// -----------------------------\n\nimport ReplacePanelData from './ReplacePanelData.js'\nReplacePanelData(ReplacePanel)\n\n\nimport ReplacePanelWatch from './ReplacePanelWatch.js'\nReplacePanelWatch(ReplacePanel)\n\n// ------------------------\n\nimport ReplacePanelComputed from './ReplacePanelComputed.js'\nReplacePanelComputed(ReplacePanel)\n\nimport ReplacePanelComputedCalc from './ReplacePanelComputedCalc.js'\nReplacePanelComputedCalc(ReplacePanel)\n\nimport ReplacePanelComputedTrim from './ReplacePanelComputedTrim.js'\nReplacePanelComputedTrim(ReplacePanel)\n\nimport ReplacePanelComputedFormat from './ReplacePanelComputedFormat.js'\nReplacePanelComputedFormat(ReplacePanel)\n\n// -----------------------------\nimport ReplacePanelMethodsInput from './ReplacePanelMethodsInput.js'\nReplacePanelMethodsInput(ReplacePanel)\n\nimport ReplacePanelMethodsReplace from './ReplacePanelMethodsReplace.js'\nReplacePanelMethodsReplace(ReplacePanel)\n\nimport ReplacePanelMethodsSearch from './ReplacePanelMethodsSearch.js'\nReplacePanelMethodsSearch(ReplacePanel)\n\nimport ReplacePanelMethodsTrim from './ReplacePanelMethodsTrim.js'\nReplacePanelMethodsTrim(ReplacePanel)\n\nimport ReplacePanelMethodsFormat from './ReplacePanelMethodsFormat.js'\nReplacePanelMethodsFormat(ReplacePanel)\n\nimport ReplacePanelMethodsCalc from './ReplacePanelMethodsCalc.js'\nReplacePanelMethodsCalc(ReplacePanel)\n\nexport default ReplacePanel","export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/css-loader/dist/cjs.js?sourceMap!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/less-loader/dist/cjs.js??ref--1-2!./ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\"","import { render, staticRenderFns } from \"./ReplacePanel.html?vue&type=template&id=8d37a762&scoped=true&\"\nimport script from \"./ReplacePanel.js?vue&type=script&lang=js&\"\nexport * from \"./ReplacePanel.js?vue&type=script&lang=js&\"\nimport style0 from \"./ReplacePanel.less?vue&type=style&index=0&id=8d37a762&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8d37a762\",\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./ReplacePanel.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=D%3A%5Cxampp%5Chtdocs%5Cprojects-html5%5CPWA-Plain-Text-Editor%5Csrc%5Ccomponents%5CReplacePanel%5CReplacePanel.vue&lang=yaml\"\nif (typeof block0 === 'function') block0(component)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"D:\\\\xampp\\\\htdocs\\\\projects-html5\\\\PWA-Plain-Text-Editor\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('8d37a762')) {\n      api.createRecord('8d37a762', component.options)\n    } else {\n      api.reload('8d37a762', component.options)\n    }\n    module.hot.accept(\"./ReplacePanel.html?vue&type=template&id=8d37a762&scoped=true&\", function () {\n      api.rerender('8d37a762', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/ReplacePanel/ReplacePanel.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./ReplacePanel.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=D%3A%5Cxampp%5Chtdocs%5Cprojects-html5%5CPWA-Plain-Text-Editor%5Csrc%5Ccomponents%5CReplacePanel%5CReplacePanel.vue&lang=yaml\"; export default mod; export * from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./ReplacePanel.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=D%3A%5Cxampp%5Chtdocs%5Cprojects-html5%5CPWA-Plain-Text-Editor%5Csrc%5Ccomponents%5CReplacePanel%5CReplacePanel.vue&lang=yaml\"","export default function (ReplacePanel) {\n    ReplacePanel.computed.CodeMirrorEditor = function () {\n      return this.$parent.$refs.CodeMirrorEditor\n    }\n    \n  ReplacePanel.computed.showReplaceLineOptionsSelect = function () {\n    return (this.localConfig.replaceMode === 'line')\n  }\n\n  ReplacePanel.computed.computedReplaceInputClassName = function () {\n    return {\n      'has-replace-line-options-select': this.showReplaceLineOptionsSelect,\n      'has-undo-button': !this.isUndoDisabled,\n    }\n  }\n\n  ReplacePanel.computed.isReplaceDisabled = function () {\n    if (this.localConfig.textContent === '') {\n      return true\n    }\n\n    if (this.localConfig.replaceMode !== 'line'\n            && this.localConfig.stringToSearch === '') {\n      return true\n    }\n\n    if (this.replaceOccurCount === 0) {\n      return true\n    }\n\n    return false\n  }\n\n  ReplacePanel.computed.replaceOccurCount = function () {\n    if (this.localConfig.textContent === '') {\n      return 0\n    }\n\n    if (this.localConfig.replaceMode !== 'line'\n            && this.localConfig.stringToSearch === '') {\n      return true\n    }\n\n    let count = 0\n    //let stringToSearch = this.localConfig.stringToSearch\n    if (this.localConfig.replaceMode === 'raw') {\n      count = this.countOccurRaw\n    } else if (this.localConfig.replaceMode === 'regex') {\n      count = this.countOccurRegex\n    } else if (this.localConfig.replaceMode === 'line') {\n      count = this.countOccurLine\n    }\n\n    //console.log(this.localConfig.textContent, this.localConfig.stringToSearch, count)\n\n    return count\n  }\n\n  // ----------------------------\n\n  ReplacePanel.computed.countOccurRaw = function () {\n    let stringToSearch = this.stringToSearchRaw\n\n    return this.localConfig.textContent.split(stringToSearch).length - 1\n  }\n\n  ReplacePanel.computed.countOccurRegex = function () {\n    let search = this.localConfig.stringToSearch\n    if (search === '') {\n      return 0\n    }\n    //return 0\n    //console.log(`'${search}'`)\n    //replace = replace.split('\\\\').join('\\\\\\\\')\n    let re\n    eval(`re = new RegExp(\"${search}\", \"g\")`)\n    //console.log(re)\n    let count = 0\n    count = ((this.localConfig.textContent || '').match(re) || []).length\n    return count\n  }\n  ReplacePanel.computed.textContentTrim = function () {\n    return this.localConfig.textContent.trim()\n  }\n  ReplacePanel.computed.textContentLines = function () {\n    return this.localConfig.textContent.split('\\n')\n  }\n  ReplacePanel.computed.textContentLinesTrim = function () {\n    return this.textContentLines.map(line => line.trim())\n  }\n  ReplacePanel.computed.stringToSearchRaw = function () {\n    return this.localConfig.stringToSearch.replace(/\\\\/g, '\\\\')\n  }\n\n  ReplacePanel.computed.stringToReplaceWithRaw = function () {\n    return this.localConfig.stringToReplaceWith.replace(/\\\\/g, '\\\\')\n  }\n\n  ReplacePanel.computed.countOccurLine = function () {\n    let stringToSearch = this.stringToSearchRaw\n    //console.log(stringToSearch)\n    if (stringToSearch === '') {\n      return this.textContentLinesTrim.length\n    }\n\n    let count = 0\n\n    let mode = this.localConfig.replaceLineOptions.mode\n    if (mode === 'prefix') {\n      this.textContentLinesTrim.forEach((line) => {\n        if (line.startsWith(stringToSearch)) {\n          count++\n        }\n      })\n    } else if (mode === 'suffix') {\n      this.textContentLinesTrim.forEach((line) => {\n        if (line.endsWith(stringToSearch)) {\n          count++\n        }\n      })\n    } else {\n      this.textContentLinesTrim.forEach((line) => {\n        if (line.indexOf(stringToSearch) > -1) {\n          count++\n        }\n      })\n    }\n    //console.log(count)\n    return count\n  }\n\n  // ----------------------------\n\n  ReplacePanel.computed.isUndoDisabled = function () {\n    if (this.textContentHistory.length === 0) {\n      return true\n    }\n    if (this.textContentHistoryIndex > 0) {\n      return false\n    }\n    return true\n  }\n\n  ReplacePanel.computed.isRedoDisabled = function () {\n    if (this.textContentHistory.length === 0) {\n      return true\n    }\n    if (this.textContentHistoryIndex < this.textContentHistory.length - 1) {\n      return false\n    }\n    return true\n  }\n\n  ReplacePanel.computed.stringToSearch = function () {\n    let stringToSearch\n    if (this.localConfig.replaceMode === 'regex') {\n      stringToSearch = this.localConfig.stringToSearch\n    } else {\n      stringToSearch = this.stringToSearchRaw\n    }\n    return stringToSearch\n  }\n  ReplacePanel.computed.isSearchEnabled = function () {\n    if (this.stringToSearch === '') {\n      return false\n    }\n\n    return (this.localConfig.textContent.indexOf(this.stringToSearch) > -1)\n  }\n\n  // ----------------------------\n\n  ReplacePanel.computed.computedReplaceButtonText = function () {\n    if (this.isReplaceDisabled === true) {\n      return 'Replace'\n    }\n\n    let replaceOccurCount = this.replaceOccurCount\n    //replaceOccurCount = 121043\n\n    let countLength = (replaceOccurCount + '').length\n    //console.log(countLength)\n    if (countLength <= 6) {\n      return `Replace (${replaceOccurCount})`\n    } else if (countLength <= 8) {\n      let countK = Math.round(replaceOccurCount / 1000)\n      return `Replace (${countK}K)`\n    } else if (countLength <= 10) {\n      let countK = Math.round(replaceOccurCount / 1000000)\n      return `Replace (${countK}M)`\n    } else if (countLength <= 13) {\n      let countK = Math.round(replaceOccurCount / 1000000000)\n      return `Replace (${countK}B)`\n    } else {\n      return 'Replace (...)'\n    }\n  }\n  ReplacePanel.computed.computedReplaceButtonTitle = function () {\n    if (this.isReplaceDisabled === true) {\n      return 'Replace'\n    }\n    return `Replace (${this.replaceOccurCount})`\n  }\n\n}","export default function (ReplacePanel) {\n  ReplacePanel.computed.calcResult = function () {\n    let textContent = this.localConfig.textContent.trim()\n    this.calcResultCopied = false\n\n    if (textContent.indexOf('\\n') === -1) {\n      // 表示只有一行\n      try {\n        let result\n        eval(`result = (${textContent})`)\n        return result\n      } catch (e) {\n      }\n    } else {\n      // 試著把最後一行加上return\n      //let lastBreak = textContent.lastIndexOf('\\n')\n      //textContent = textContent.slice(0, lastBreak + 1) + 'return ' + textContent.slice(lastBreak + 1)\n      let lines = textContent.split('\\n')\n      let lastLine = lines[(lines.length - 1)].trim()\n      if (!lastLine.startsWith('return ')) {\n        lines[(lines.length - 1)] = 'return ' + lastLine\n      }\n      \n      textContent = lines.join('\\n')\n      //console.log(textContent)\n\n      try {\n        let result\n        eval(`result = (function () {\n  ${textContent}\n  })()`)\n        return result\n      } catch (e) {\n      }\n    }\n  }\n  ReplacePanel.computed.computedCalcButtonClassName = function () {\n    return {\n      'disabled': !this.calcResult,\n      'positive': (this.calcResult && this.calcResultCopied === false)\n    }\n  }\n  ReplacePanel.computed.computedCalcButtonText = function () {\n    let result = this.calcResult\n\n    if (!result) {\n      return '(NULL)'\n    }\n\n    let lengthLimit = 13\n\n    result = String(result).trim()\n    result = result.split('\\n').join(' ')\n    if (result.length > lengthLimit) {\n      result = result.slice(0, lengthLimit)\n    }\n    return `Copy: ${result}`\n  }\n}","export default function (ReplacePanel) {\n  \n  ReplacePanel.computed.computedFormatActionButtonClassNameList = function () {\n    let list = []\n    \n    let tool = this.localConfig.formatTool\n    //console.log(tool, this.isTrimEnabled)\n    \n    if ((tool === 'lines-trim' && this.isTrimEnabled === false)\n            || (tool === 'lines-ltrim' && this.isLTrimEnabled === false)\n            || (tool === 'lines-rtrim' && this.isRTrimEnabled === false)) {\n      list.push('disabled')\n    }\n    \n    return list.join(' ')\n  }\n  \n  ReplacePanel.computed.isMinifyDisabled = function () {\n    if (this.config.inited === false) {\n      return 'disabled'\n    }\n    \n    let editor = this.$parent.$refs.CodeMirrorEditor\n    if (!editor) {\n      return 'disabled'\n    }\n    \n    let mode = editor.getMode()\n    if (mode !== 'javascript'\n            && mode !== 'css'\n            && mode !== 'html') {\n      return 'disabled'\n    }\n    \n    if (this.isTrimEnabled === true\n            || this.textContentLines.length > 1) {\n      return undefined\n    }\n    else {\n      return 'disabled'\n    }\n  }\n  \n  ReplacePanel.computed.isBeautifyDisabled = function () {\n    if (this.config.inited === false) {\n      return 'disabled'\n    }\n    \n    let editor = this.$parent.$refs.CodeMirrorEditor\n    //console.log(editor)\n    if (!editor) {\n      return 'disabled'\n    }\n    \n    let mode = editor.getMode()\n    //console.log(mode)\n    if (mode !== 'javascript'\n            && mode !== 'css'\n            && mode !== 'html') {\n      return 'disabled'\n    }\n    \n    if (this.isModifiedAfterBeautification === true) {\n      return undefined\n    }\n    else {\n      return 'disabled'\n    }\n  }\n}","export default function (ReplacePanel) {\n  \n  ReplacePanel.computed.isTrimEnabled = function () {\n    for (let i = 0; i < this.textContentLines.length; i++) {\n      let line = this.textContentLines[i]\n      if (line !== line.trim()) {\n        return true\n      }\n    }\n    return false\n  }\n  ReplacePanel.computed.isTrimDisabled = function () {\n    if (this.isTrimEnabled === true) {\n      return undefined\n    }\n    else {\n      return 'disabled'\n    }\n  }\n  \n  ReplacePanel.computed.isLTrimEnabled = function () {\n    for (let i = 0; i < this.textContentLines.length; i++) {\n      let line = this.textContentLines[i]\n      let char = line.trim().slice(0, 1)\n      let index = line.indexOf(char)\n      if (index > 0) {\n        return true\n      }\n    }\n    return false\n  }\n  \n  ReplacePanel.computed.isLTrimDisabled = function () {\n    if (this.isLTrimEnabled === true) {\n      return undefined\n    }\n    else {\n      return 'disabled'\n    }\n  }\n  \n  \n  ReplacePanel.computed.isRTrimEnabled = function () {\n    for (let i = 0; i < this.textContentLines.length; i++) {\n      let line = this.textContentLines[i]\n      let char = line.trim().slice(-1)\n      let index = line.lastIndexOf(char)\n      if (index < line.length - 1) {\n        return true\n      }\n    }\n    return false\n  }\n  \n  \n  ReplacePanel.computed.isRTrimDisabled = function () {\n    if (this.isRTrimEnabled === true) {\n      return undefined\n    }\n    else {\n      return 'disabled'\n    }\n  }\n  \n}","export default function (ReplacePanel) {\n  ReplacePanel.data = function () {\n    this.$i18n.locale = this.config.locale\n    return {\n      textContentHistory: [],\n      replaceLock: false,\n      textContentModified: false,\n      isModifiedAfterBeautification: true,\n      //panelHeight: '10.8rem'\n      panelHeight: '12.5rem',\n      calcResultCopied: false\n    }\n  }\n}","export default function (ReplacePanel) {\n  ReplacePanel.methods.copyCalcResult = function () {\n    this.utils.ClipboardUtils.copyPlainString(this.calcResult)\n    this.calcResultCopied = true\n  }\n}\n    ","//import htmlMinifier from 'html-minifier-terser'\n//import cssMinifier from 'css-minifiers'\n\n \nexport default function (ReplacePanel) {\n\n  ReplacePanel.methods.doFormat = function () {\n    let tool = this.localConfig.formatTool\n    //console.log(tool)\n    if (tool === 'lines-trim') {\n      return this.trimTextContent()\n    }\n    else if (tool === 'lines-ltrim') {\n      return this.ltrimTextContent()\n    }\n    else if (tool === 'lines-rtrim') {\n      return this.rtrimTextContent()\n    }\n    else if (tool === 'code-minifiy') {\n      return this.minifiyCode()\n    }\n    else if (tool === 'code-beautify') {\n      return this.beautifyCode()\n    }\n  }\n  \n  ReplacePanel.methods.minifiyCode = async function () {\n    this.$parent.$refs.CodeMirrorEditor.minify()\n    //console.log(mode)\n    \n    \n    //console.error('minifiyCode')\n    //let result = await minify(this.localConfig.textContent)\n    //console.log(result)\n    //this.localConfig.textContent = result\n  }\n  \n  ReplacePanel.methods.beautifyCode = function () {\n    //console.error('beautifyCode')\n    this.$parent.$refs.CodeMirrorEditor.autoFormat()\n    //console.log()\n    this.isModifiedAfterBeautification = false\n  }\n}\n    ","export default function (ReplacePanel) {\n  ReplacePanel.methods.focus = async function () {\n    await this.utils.AsyncUtils.sleep(0)\n    this.$refs.SearchInput.focus()\n  }\n\n  ReplacePanel.methods.selectReplaceInput = async function () {\n    await this.utils.AsyncUtils.sleep(0)\n    //console.log('selectReplaceInput', this.$refs.ReplaceInput)\n    this.$refs.ReplaceInput.focus()\n    this.$refs.ReplaceInput.select()\n  }\n}\n    ","export default function (ReplacePanel) {\n  ReplacePanel.methods.clearHistory = function () {\n    //console.log('clearHistory')\n    this.textContentHistory = []\n    this.textContentHistoryIndex = -1\n    this.textContentModified = true\n  }\n  ReplacePanel.methods.doReplace = async function () {\n    //let stringToSearch = this.localConfig.stringToSearch\n    //let stringToReplaceWith = this.config.stringToReplaceWith\n\n    this.replaceLock = true\n\n    if (this.textContentHistoryIndex > -1\n            && this.textContentHistoryIndex !== this.textContentHistory.length - 1) {\n      this.textContentHistory = this.textContentHistory.slice(0, this.textContentHistoryIndex)\n    }\n\n    this.saveHistory()\n\n    if (this.localConfig.replaceMode === 'raw') {\n      this.doReplaceRaw()\n    } else if (this.localConfig.replaceMode === 'regex') {\n      this.doReplaceRegex()\n    } else if (this.localConfig.replaceMode === 'line') {\n      let mode = this.localConfig.replaceLineOptions.mode\n      if (mode === 'prefix') {\n        this.doReplaceLinePrefix()\n      } else if (mode === 'suffix') {\n        this.doReplaceLineSuffix()\n      } else if (mode === 'first' || mode === 'last') {\n        this.doReplaceLineIndex()\n      }\n    }\n\n    this.textContentModified = false\n\n    await this.utils.AsyncUtils.sleep(0)\n    this.replaceLock = false\n  }\n  ReplacePanel.methods.saveHistory = function () {\n    //this.clearHistory()\n    this.textContentHistory.push(this.localConfig.textContent)\n    this.textContentHistoryIndex = this.textContentHistory.length\n\n  }\n  ReplacePanel.methods.doReplaceRaw = function () {\n    let stringToSearch = this.stringToSearchRaw\n    let stringToReplaceWith = this.stringToReplaceWithRaw\n\n    console.log(stringToSearch, stringToReplaceWith)\n\n    this.localConfig.textContent = this.localConfig.textContent.split(stringToSearch)\n            .join(stringToReplaceWith)\n\n    console.log(this.localConfig.textContent)\n  }\n  ReplacePanel.methods.doReplaceRegex = function () {\n    let stringToSearch = this.localConfig.stringToSearch\n    let stringToReplaceWith = this.localConfig.stringToReplaceWith\n    //console.log(stringToReplaceWith)\n    stringToReplaceWith = stringToReplaceWith.split('\\\\n').join('\\n')\n    let re = new RegExp(stringToSearch, \"g\")\n\n    this.localConfig.textContent = this.localConfig.textContent.replace(re, stringToReplaceWith);\n  }\n  ReplacePanel.methods.doReplaceLinePrefix = function () {\n    this.localConfig.textContent = this.textContentLines.map(line => {\n      /*\n       if (this.localConfig.replaceLineOptions.lTrim === true) {\n       if (line.trim() === '') {\n       return ''\n       }\n       \n       let firstChar = line.trim().slice(0, 1)\n       let firstIndex = line.indexOf(firstChar)\n       line = line.slice(firstIndex)\n       \n       if (line.startsWith(this.stringToSearchRaw)) {\n       return this.stringToReplaceWithRaw + line.slice(this.stringToSearchRaw.length)\n       }\n       }\n       else {\n       if (line.trim() === '') {\n       return line\n       }\n       }\n       */\n\n      let firstChar = line.trim().slice(0, 1)\n      let firstIndex = line.indexOf(firstChar)\n\n      let padding = line.slice(0, firstIndex)\n      let trimLine = line.slice(firstIndex)\n\n      if (trimLine.startsWith(this.stringToSearchRaw)) {\n        return padding + this.stringToReplaceWithRaw + trimLine.slice(this.stringToSearchRaw.length)\n      } else {\n        return line\n      }\n    }).join('\\n')\n  }\n  ReplacePanel.methods.doReplaceLineSuffix = function () {\n    this.localConfig.textContent = this.textContentLines.map(line => {\n\n      let lastChar = line.trim().slice(-1)\n      //console.log(lastChar)\n      let lastIndex = line.lastIndexOf(lastChar)\n\n      let padding = line.slice(lastIndex + 1)\n      let trimLine = line.slice(0, lastIndex + 1)\n\n      if (trimLine.endsWith(this.stringToSearchRaw)) {\n        return trimLine.slice(0, trimLine.length - this.stringToSearchRaw.length) + this.stringToReplaceWithRaw + padding\n      } else {\n        return line\n      }\n    }).join('\\n')\n  }\n  ReplacePanel.methods.doReplaceLineIndex = function () {\n    let mode = this.localConfig.replaceLineOptions.mode\n\n    this.localConfig.textContent = this.textContentLines.map(line => {\n\n      let index\n      if (mode === 'first') {\n        index = line.indexOf(this.stringToSearchRaw)\n      } else {\n        index = line.lastIndexOf(this.stringToSearchRaw)\n      }\n\n      if (index === -1) {\n        return line\n      }\n\n      if (index === 0) {\n        return this.stringToReplaceWithRaw + line.slice(this.stringToSearchRaw.length)\n      } else if (index === line.length - this.stringToSearchRaw.length) {\n        return line.slice(0, index) + this.stringToReplaceWithRaw\n      } else {\n        return line.slice(0, index) + this.stringToReplaceWithRaw + line.slice(index + this.stringToSearchRaw.length)\n      }\n    }).join('\\n')\n  }\n  ReplacePanel.methods.undo = function () {\n    //console.log('undo', this.textContentHistoryIndex, this.textContentHistory.length, this.textContentHistory[(this.textContentHistoryIndex)])\n    //console.log(this.textContentHistory)\n    if ((this.textContentHistoryIndex) <= 0\n            || !this.textContentHistory[(this.textContentHistoryIndex - 1)]) {\n      return false\n    }\n\n    if (this.textContentHistoryIndex === this.textContentHistory.length) {\n      this.textContentHistory.push(this.localConfig.textContent)\n    }\n\n    this.textContentHistoryIndex--\n    this.localConfig.textContent = this.textContentHistory[this.textContentHistoryIndex]\n  }\n  ReplacePanel.methods.redo = function () {\n    //console.log('redo', this.textContentHistoryIndex, this.textContentHistory.length, this.textContentHistory[(this.textContentHistoryIndex + 1)])\n    //console.log(this.textContentHistory)\n    if ((this.textContentHistoryIndex + 1) > this.textContentHistory.length\n            || !this.textContentHistory[(this.textContentHistoryIndex + 1)]) {\n      return false\n    }\n\n    this.textContentHistoryIndex++\n    this.localConfig.textContent = this.textContentHistory[this.textContentHistoryIndex]\n  }\n}\n    ","export default function (ReplacePanel) {\n//  ReplacePanel.methods.doSearchNext = function () {\n//    let stringToSearch = this.stringToSearch\n//\n//    let startPos = this.localConfig.textContent.indexOf(stringToSearch, this.searchPostion)\n//    if (startPos === -1) {\n//      startPos = this.localConfig.textContent.indexOf(stringToSearch)\n//\n//      if (startPos === -1) {\n//        return false\n//      }\n//    }\n//\n//    this.searchPostion = startPos + 1\n//\n//    // do selection\n//    // Chrome / Firefox\n//    let tarea = this.$refs.TextareaEditor.$el\n//    if (typeof (tarea.selectionStart) !== \"undefined\") {\n//      tarea.selectionStart = startPos;\n//      tarea.selectionEnd = startPos;\n//\n//      tarea.blur();\n//      tarea.focus();\n//      tarea.selectionStart = startPos;\n//      tarea.selectionEnd = startPos + this.localConfig.stringToSearch.length;\n//\n//      return true;\n//    }\n//    /*\n//     // IE\n//     if (document.selection && document.selection.createRange) {\n//     tarea.focus();\n//     tarea.select();\n//     var range = document.selection.createRange();\n//     range.collapse(true);\n//     range.moveEnd(\"character\", endPos);\n//     range.moveStart(\"character\", startPos);\n//     range.select();\n//     return true;\n//     }\n//     */\n//    return false;\n//  }\n//  ReplacePanel.methods.doSearchPrev = function () {\n//    let stringToSearch = this.stringToSearch\n//\n//    let startPos\n//    if (this.searchPostion - this.stringToSearch.length - 1 < 0) {\n//      startPos = this.localConfig.textContent.lastIndexOf(stringToSearch)\n//    } else {\n//      startPos = this.localConfig.textContent.lastIndexOf(stringToSearch, this.searchPostion - this.stringToSearch.length - 1)\n//    }\n//    if (startPos === -1) {\n//      startPos = this.localConfig.textContent.lastIndexOf(stringToSearch)\n//\n//      if (startPos === -1) {\n//        //console.log('not found')\n//        return false\n//      }\n//    }\n//\n//    //console.log(startPos)\n//\n//    this.searchPostion = startPos + 1\n//\n//    // do selection\n//    // Chrome / Firefox\n//    let tarea = this.$refs.TextareaEditor.$el\n//    if (typeof (tarea.selectionStart) !== \"undefined\") {\n//      tarea.selectionStart = startPos;\n//      tarea.selectionEnd = startPos;\n//\n//      tarea.blur();\n//      tarea.focus();\n//      tarea.selectionStart = startPos;\n//      tarea.selectionEnd = startPos + this.localConfig.stringToSearch.length;\n//\n//\n//      // collapse selection here\n//      //tarea.blur()\n//      //tarea.focus() // this scrolls the textarea\n//      // expand selection here\n//      return true;\n//    }\n//    /*\n//     // IE\n//     if (document.selection && document.selection.createRange) {\n//     tarea.focus();\n//     tarea.select();\n//     var range = document.selection.createRange();\n//     range.collapse(true);\n//     range.moveEnd(\"character\", endPos);\n//     range.moveStart(\"character\", startPos);\n//     range.select();\n//     return true;\n//     }\n//     */\n//    return false;\n//  }\n\n  ReplacePanel.methods.findPrev = function () {\n    let CodeMirror = this.$parent.$refs.CodeMirrorEditor\n    return CodeMirror.findPrev()\n  }\n  ReplacePanel.methods.findNext = function () {\n    let CodeMirror = this.$parent.$refs.CodeMirrorEditor\n    return CodeMirror.findNext()\n  }\n}\n    ","import $ from 'jquery'\n\nexport default function (ReplacePanel) {\n//  ReplacePanel.methods.initDropdown = function () {\n//    console.log('222')\n//    console.log($(this.$refs.FormatToolDropdown).length)\n//    //console.log($(this.$el).find('.ui.selection.dropdown').length)\n//    $(this.$refs.FormatToolDropdown).dropdown({\n//      //clearable: true\n//      // you can use any ui transition\n//      action: 'combo'\n//    })\n//  }\n\n  ReplacePanel.methods.trimTextContent = function () {\n    this.saveHistory()\n\n    this.localConfig.textContent = this.textContentLines.map(line => line.trim()).join('\\n')\n  }\n  ReplacePanel.methods.ltrimTextContent = function () {\n    this.saveHistory()\n\n    this.localConfig.textContent = this.textContentLines.map(line => {\n      let char = line.trim().slice(0, 1)\n      let index = line.indexOf(char)\n      if (index === 0) {\n        return line\n      } else {\n        return line.slice(index)\n      }\n    }).join('\\n')\n  }\n  ReplacePanel.methods.rtrimTextContent = function () {\n    this.saveHistory()\n\n    this.localConfig.textContent = this.textContentLines.map(line => {\n      let char = line.trim().slice(-1)\n      let index = line.lastIndexOf(char)\n      if (index === line.length - 1) {\n        return line\n      } else {\n        return line.slice(0, index + 1)\n      }\n    }).join('\\n')\n  }\n  /*\n   formatCode () {\n   if (this.isFormatJSONEnabled) {\n   return this.formatJSONTextContent()\n   }\n   else if (this.isFormatXMLEnabled) {\n   return this.formatXMLTextContent()\n   }\n   },\n   formatJSONTextContent () {\n   this.saveHistory()\n   \n   if (this.textContentTrim.startsWith('{') \n   && this.textContentTrim.endsWith('}')) {\n   try {\n   //let object = JSON.parse(this.textContentTrim)\n   let object\n   eval('object = ' + this.textContentTrim)\n   this.localConfig.textContent = JSON.stringify(object, null, 2)\n   }\n   catch (e) {\n   return false\n   }\n   }\n   return false\n   },\n   formatXMLTextContent () {\n   this.saveHistory()\n   \n   this.localConfig.textContent = this.prettifyXml(this.textContentTrim)\n   },\n   prettifyXml (sourceXml) {\n   var xmlDoc = new DOMParser().parseFromString(sourceXml, 'application/xml');\n   var xsltDoc = new DOMParser().parseFromString([\n   // describes how we want to modify the XML - indent everything\n   '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n   '  <xsl:strip-space elements=\"*\"/>',\n   '  <xsl:template match=\"para[content-style][not(text())]\">', // change to just text() to strip space in text nodes\n   '    <xsl:value-of select=\"normalize-space(.)\"/>',\n   '  </xsl:template>',\n   '  <xsl:template match=\"node()|@*\">',\n   '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n   '  </xsl:template>',\n   '  <xsl:output indent=\"yes\"/>',\n   '</xsl:stylesheet>',\n   ].join('\\n'), 'application/xml');\n   \n   var xsltProcessor = new XSLTProcessor();    \n   xsltProcessor.importStylesheet(xsltDoc);\n   var resultDoc = xsltProcessor.transformToDocument(xmlDoc);\n   var resultXml = new XMLSerializer().serializeToString(resultDoc);\n   return resultXml;\n   },\n   */\n}\n    ","export default function (ReplacePanel) {\n  ReplacePanel.watch = {\n    'localConfig.textContent'() {\n      if (this.replaceLock === true) {\n        return false\n      }\n      this.clearHistory()\n      this.isModifiedAfterBeautification = true\n    },\n    'localConfig.displayPanel'() {\n      this.setPanelHeight()\n    },\n    'localConfig.replaceMode'() {\n      this.setPanelHeight()\n    },\n    'config.inited'() {\n      if (this.config.inited === false) {\n        return false\n      }\n      this.setPanelHeight()\n      \n      //console.log('111')\n      this.initDropdown()\n    }\n  }\n}"],"sourceRoot":""}